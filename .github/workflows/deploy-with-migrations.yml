name: Deploy with Migrations

on:
  push:
    branches: [master, main]
  workflow_dispatch:

jobs:
  check-migrations:
    runs-on: ubuntu-latest
    outputs:
      has-migrations: ${{ steps.check.outputs.has-migrations }}
      migration-files: ${{ steps.check.outputs.migration-files }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for new migrations
        id: check
        run: |
          # Check if any migration files have changed
          MIGRATION_CHANGES=$(git diff --name-only HEAD~1 HEAD -- migrations/*.sql || true)

          if [ -n "$MIGRATION_CHANGES" ]; then
            echo "has-migrations=true" >> $GITHUB_OUTPUT
            echo "migration-files<<EOF" >> $GITHUB_OUTPUT
            echo "$MIGRATION_CHANGES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            echo "üìã Found migration changes:"
            echo "$MIGRATION_CHANGES"
          else
            echo "has-migrations=false" >> $GITHUB_OUTPUT
            echo "‚úÖ No migration changes detected"
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: check-migrations
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --passWithNoTests

      - name: Type check
        run: npm run typecheck

      - name: Build
        run: npm run build

      - name: Apply D1 Migrations
        if: needs.check-migrations.outputs.has-migrations == 'true'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          D1_DATABASE_ID: ${{ secrets.D1_DATABASE_ID }}
        run: |
          echo "üîÑ Applying D1 migrations..."
          npx wrangler d1 migrations apply $D1_DATABASE_ID --remote

          # Run data migrations if needed
          if [ -f "./scripts/migrate-d1-data.sh" ]; then
            echo "üìä Running data migration script..."
            ./scripts/migrate-d1-data.sh
          fi

      - name: Deploy to Cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler deploy --compatibility-date $(date +%Y-%m-%d)

      - name: Verify Deployment
        run: |
          echo "üîç Verifying deployment..."
          # Add health check or smoke test here
          # curl -f https://omnichat.your-domain.com/api/health || exit 1

      - name: Notify on Migration
        if: needs.check-migrations.outputs.has-migrations == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const migrationFiles = `${{ needs.check-migrations.outputs.migration-files }}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `üöÄ Deployment completed with migrations!\n\nApplied migrations:\n\`\`\`\n${migrationFiles}\n\`\`\`\n\nUsers may need to refresh their browser if they experience issues.`
            });
