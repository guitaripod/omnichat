name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run type check
        run: npm run typecheck

      - name: Run linter
        run: npm run lint

      - name: Build for Cloudflare Pages
        run: npm run pages:build

      - name: Check Cloudflare Secrets
        id: check-secrets
        run: |
          if [[ -n "${{ secrets.CLOUDFLARE_API_TOKEN }}" && -n "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ]]; then
            echo "has_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "has_secrets=false" >> $GITHUB_OUTPUT
            echo "::warning::Cloudflare secrets not found. Skipping deployment."
          fi

      - name: Deploy to Cloudflare Pages
        if: steps.check-secrets.outputs.has_secrets == 'true'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler@3 pages project create omnichat --production-branch=master --compatibility-flags="nodejs_compat" --compatibility-date="2024-09-23" || true
          npx wrangler@3 pages deploy .vercel/output/static --project-name=omnichat --branch=${{ github.ref_name }}
